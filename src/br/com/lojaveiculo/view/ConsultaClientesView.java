/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.lojaveiculo.view;

import br.com.lojaveiculo.abstractview.TelaBaseConsultaView;
import br.com.lojaveiculo.dao.PessoaDAO;
import br.com.lojaveiculo.model.Cliente;
import br.com.lojaveiculo.model.Pessoa;
import br.com.lojaveiculo.repositorio.PessoaRepositorio;
import static java.awt.image.ImageObserver.HEIGHT;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rafael
 */
public class ConsultaClientesView extends TelaBaseConsultaView {
    
    private final PessoaRepositorio repositorioDePessoas = new PessoaDAO();
    private DefaultTableModel grid;
    private VendaView venda;
    private PessoaRepositorio pessoas;

        //public CadastroClienteView(VendaView vendaView) {
       // organizaLayout();
       // consulta = consultaFuncView;
// }
 
    public ConsultaClientesView() {
        organizaLayout();
        this.btnSelecionarCliente.setEnabled(false);
    }

    public ConsultaClientesView(VendaView venda) {
        organizaLayout();
        this.btnSelecionarCliente.setEnabled(true);
        this.venda = venda;
        pessoas = new PessoaDAO();
       
    }
    
    
    @Override
    public void organizaLayout() {
        initComponents(); 
        // Adicionar painel ao fundo
        this.setContentPane(dkpFundo);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        grid = (DefaultTableModel) tblClientes.getModel();
        criaClientes();
        popularTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
       public void selecionaItem(String cpf){
       venda.cliente = pessoas.buscarPessoaPorCPF(cpf); 
       venda.ClienteSelecionado = true;
       setVisible(false);
    }
    
    //Teste
    public void criaClientes() {
        Pessoa func1 = new Cliente("Rafael", "12876163993", "47987654321");
        Pessoa func2 = new Cliente("Matheus", "18376412983", "4799876213");
        Pessoa func3 = new Cliente("Eduardo", "18723465409", "47965427123");
        repositorioDePessoas.adicionarPessoa(func1);
        repositorioDePessoas.adicionarPessoa(func2);
        repositorioDePessoas.adicionarPessoa(func3);
    }
        
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dkpFundo = new javax.swing.JDesktopPane();
        btnBuscarCliente = new javax.swing.JButton();
        txtCPFBuscado = new javax.swing.JTextField();
        lblCPFCliente = new javax.swing.JLabel();
        btnCadastrarCliente = new javax.swing.JButton();
        btnRemoverCliente = new javax.swing.JButton();
        btnSelecionarCliente = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        dkpFundo.setPreferredSize(new java.awt.Dimension(940, 464));

        btnBuscarCliente.setBackground(new java.awt.Color(82, 148, 226));
        btnBuscarCliente.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnBuscarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        lblCPFCliente.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        lblCPFCliente.setForeground(new java.awt.Color(255, 255, 255));
        lblCPFCliente.setText("CPF:");

        btnCadastrarCliente.setBackground(new java.awt.Color(82, 148, 226));
        btnCadastrarCliente.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnCadastrarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrarCliente.setText("Cadastrar ");
        btnCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarClienteActionPerformed(evt);
            }
        });

        btnRemoverCliente.setBackground(new java.awt.Color(82, 148, 226));
        btnRemoverCliente.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnRemoverCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoverCliente.setText("Remover");
        btnRemoverCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverClienteActionPerformed(evt);
            }
        });

        btnSelecionarCliente.setBackground(new java.awt.Color(82, 148, 226));
        btnSelecionarCliente.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnSelecionarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnSelecionarCliente.setText("Selecionar");
        btnSelecionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarClienteActionPerformed(evt);
            }
        });

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Nome", "CPF", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblClientes.setToolTipText("");
        tblClientes.setSelectionBackground(new java.awt.Color(153, 153, 153));
        jScrollPane2.setViewportView(tblClientes);

        dkpFundo.setLayer(btnBuscarCliente, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dkpFundo.setLayer(txtCPFBuscado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dkpFundo.setLayer(lblCPFCliente, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dkpFundo.setLayer(btnCadastrarCliente, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dkpFundo.setLayer(btnRemoverCliente, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dkpFundo.setLayer(btnSelecionarCliente, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dkpFundo.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout dkpFundoLayout = new javax.swing.GroupLayout(dkpFundo);
        dkpFundo.setLayout(dkpFundoLayout);
        dkpFundoLayout.setHorizontalGroup(
            dkpFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dkpFundoLayout.createSequentialGroup()
                .addGroup(dkpFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dkpFundoLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(dkpFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(dkpFundoLayout.createSequentialGroup()
                                .addComponent(lblCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCPFBuscado, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCadastrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemoverCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSelecionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dkpFundoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1042, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        dkpFundoLayout.setVerticalGroup(
            dkpFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dkpFundoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dkpFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dkpFundoLayout.createSequentialGroup()
                        .addGroup(dkpFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCPFBuscado, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                            .addComponent(lblCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarCliente))
                    .addGroup(dkpFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCadastrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(dkpFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemoverCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSelecionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dkpFundo, javax.swing.GroupLayout.DEFAULT_SIZE, 1062, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dkpFundo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        limpaSelecao();
        buscaNaTabela(txtCPFBuscado.getText().toUpperCase());
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarClienteActionPerformed
       abrirTelaCadastro();
    }//GEN-LAST:event_btnCadastrarClienteActionPerformed

    private void btnRemoverClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverClienteActionPerformed
        removerDaTabela();
    }//GEN-LAST:event_btnRemoverClienteActionPerformed

    private void btnSelecionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarClienteActionPerformed
       grid.getValueAt(tblClientes.getSelectedRow(), 1);
            String cpf = (String) grid.getValueAt(tblClientes.getSelectedRow(), 1);
            selecionaItem(cpf);
    }//GEN-LAST:event_btnSelecionarClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnCadastrarCliente;
    private javax.swing.JButton btnRemoverCliente;
    private javax.swing.JButton btnSelecionarCliente;
    private javax.swing.JDesktopPane dkpFundo;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCPFCliente;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtCPFBuscado;
    // End of variables declaration//GEN-END:variables

    @Override
    public void abrirTelaCadastro() {
        CadastroClienteView cadastroCliente = new CadastroClienteView(this);
        cadastroCliente.setVisible(true);;
    }

    @Override
    public void limpaSelecao() {
         // Limpar seleção da linha atual na tabela
        tblClientes.clearSelection();
    }

    @Override
    public void popularTabela() {
        limparTabela();
        tblClientes.getModel();
        Set<Pessoa> clientes = repositorioDePessoas.getClientes();
        for (Pessoa client : clientes) {
                grid.addRow(client.obterDados());

            }
        }

    @Override
    public void removerDaTabela() {
       if (!(tblClientes.getSelectedRow() == -1)) {
            String CPF = (String) grid.getValueAt(tblClientes.getSelectedRow(), 1);
            repositorioDePessoas.removerPessoa(CPF);
            limparTabela();
            popularTabela();
        } else {
            apresentaMensagem("Nenhum cliente foi selecionado.", "Erro de exclusão");
        }
    }

    @Override
    public void limparTabela() {
        grid.setRowCount(0);
    }

    @Override
    public void buscaNaTabela(String cpf) {
        int incidencia = -1;
        if (cpf.length() == 11) {
            for (int i = 0; i <= tblClientes.getRowCount() - 1; i++) {
                if (grid.getValueAt(i, 1).equals(cpf)) {
                    incidencia = i;
                }
            }
            if (incidencia != -1) {
                tblClientes.setRowSelectionInterval(incidencia, incidencia);
            } else {
                apresentaMensagem("Não foi encontrado nenhum cliente com o '" + cpf + "'.", "Funcionário não encontrado");
            }
        } else {
            apresentaMensagem("Digite um CPF válido!", "CPF inválido");
        }
 }
 

    @Override
    public void apresentaMensagem(String mensagem, String titulo) {
         JOptionPane.showMessageDialog(rootPane, mensagem, titulo, HEIGHT);
    }


    @Override
    public void abrirTelaAlterarCadastro(Object obj) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
